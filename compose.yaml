name: taski

volumes:
  pg_data:
    name: taski_pg_data
  static:
    name: taski_static

networks:
  db:
    name: taski_net-db
  backend:
    name: taski_net-backend

services:
  gateway:
    container_name: taski_gateway
    image: nginx:1.27.1-alpine
    restart: unless-stopped
    ports:
      - ${GATEWAY_HOST}:${GATEWAY_PORT}:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static:/staticfiles:ro
    networks:
      - backend
    depends_on:
      - backend
      - frontend

  backend:
    build:
      context: ./backend
    container_name: taski_backend
    restart: unless-stopped
    env_file: .env
    networks:
      - backend
      - db
    volumes:
      - static:/app/collected_static
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:13.16-alpine
    container_name: taski_db
    restart: unless-stopped
    user: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - db
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      args:
        - NODE_VERSION=20.17-alpine
    container_name: taski_frontend
    volumes:
      - static:/app/build
